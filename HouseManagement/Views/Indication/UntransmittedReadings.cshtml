@model IEnumerable<HouseManagement.Models.Counter>

@{
    ViewData["Title"] = "Index";
}

<h1>Счетчики, по которым показания не переданы за период @ViewBag.Period</h1>

<div>
    @Html.ActionLink("Назад", "Index")
</div>
<br />
<form method="get" action="@Url.Action("UntransmittedReadings", "Indication")">
    <div class="input-group">
        <div>
            <h4>Фильтрация</h4>
            <br />
            <input type="text" id="searchFlat" placeholder="Номер квартиры" name="searchFlat" />
            &nbsp;&nbsp;&nbsp;&nbsp;

            <input type="text" id="searchHouse" placeholder="Название дома" name="searchHouse" />
            &nbsp;&nbsp;&nbsp;&nbsp;

            @Html.DisplayName("Наименование услуги")
            @Html.DropDownList("name", ViewBag.NamesFilters as SelectList, new { htmlAttributes = new { @class = "form-control" } })
            &nbsp;&nbsp;&nbsp;&nbsp;

            @Html.DisplayName("Тип счетчика")
            @Html.DropDownList("type", ViewBag.TypesFilters as SelectList, new { htmlAttributes = new { @class = "form-control" } })

            <br />
            <br />
            <input type="submit" value="Фильтровать" class="btn btn-success" />
        </div>
    </div>
</form>
<br />
@if (Model.Count() == 0)
{
    <h5>Список пуст</h5>
}
else
{
    <table class="table">
        <tr>
            <th>
                @Html.Label("", "Название услуги", htmlAttributes: new { @class = "control-label col-md-5" })
            </th>
            <th>
                @Html.Label("", "Тип счетчика", htmlAttributes: new { @class = "control-label col-md-5" })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.number)
            </th>
            <th>
                @Html.Label("", "Номер квартиры", htmlAttributes: new { @class = "control-label col-md-5" })
            </th>
            <th>
                @Html.Label("", "Дом")
            </th>
            <th></th>
        </tr>
        @{
            int i = 0;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td class="table-light">
                    @Html.Label("", ViewBag.Names[i], htmlAttributes: new { @class = "control-label" })
                </td>
                <td class="table-light">
                    @Html.Label("", ViewBag.Types[i], htmlAttributes: new { @class = "control-label" })
                </td>
                <td class="table-light">
                    @Html.DisplayFor(modelItem => item.number)
                </td>
                <td class="table-light">
                    @if (ViewBag.Flats[i] != null)
                    {
                        <a asp-action="Details" asp-controller="Flat" asp-route-id="@ViewBag.Flats[i].id">@ViewBag.Flats[i].flatNumber</a>
                    }
                    else
                    {
                        @Html.Label("", "-", htmlAttributes: new { @class = "control-label" })
                    }
                </td>

                <td class="table-light">
                    @Html.Label("", ViewBag.NamesHouses[i], htmlAttributes: new { @class = "control-label" })
                </td>
            </tr>
            i++;
        }

    </table>
}